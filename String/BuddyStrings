/**
 * Question Link: https://leetcode.com/problems/buddy-strings/
 * Primary idea: 
    1. return false/tru for absolute cases 
    2. compare each character, only if a pair of different characters occurs return true
 * Time Complexity: O(n), Space Complexity: O(n)
 */
 
 class BuddyStrings {
    func buddyStrings(_ A: String, _ B: String) -> Bool {
        var count = 0
        let aLength = A.length
        let bLength = B.length
        if aLength != bLength || aLength == 0 { return false }
        if A == B && Array(Set(A)).count != aLength { return true }
        let aArray = Array(A)
        let bArray = Array(B)
        var diff = [Character]()
        for index in 0...aLength-1 {
            if aArray[index] != bArray[index] { 
                count += 1
                diff.append(aArray[index])
                diff.append(bArray[index])
            }
        }
        
        if (count == 2 && diff[0] == diff[3] && diff[1] == diff[2] ) { 
            return true 
        } else { 
            return false
        }
    }
}
